<?xml version="1.0" encoding="utf-8" standalone="no"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template name="PartHeaderPrint"><xsl:param name="FirstCall" select="'N'"/><xsl:param name="PartId"/><xsl:param name="IdPrefix"/><xsl:param name="Form"/><xsl:param name="Question"/><xsl:param name="UserAgency"/><xsl:param name="AgencyUsageBlock"/><xsl:call-template name="SubreportHeaderPrint"><xsl:with-param name="Title" select="/Screen/ScreenData/Request/Form/Title"/><xsl:with-param name="LeftHeaderBlockList"/><xsl:with-param name="RightHeaderBlockList"/><xsl:with-param name="DoPageBreak"><xsl:choose><xsl:when test="$FirstCall='Y'"><xsl:value-of select="'N'"/></xsl:when><xsl:otherwise><xsl:value-of select="'Y'"/></xsl:otherwise></xsl:choose></xsl:with-param></xsl:call-template><xsl:call-template name="AttachPartHeader"><xsl:with-param name="FirstCall" select="$FirstCall"/><xsl:with-param name="PartId" select="$PartId"/><xsl:with-param name="UserAgency" select="$UserAgency"/></xsl:call-template><xsl:if test="$UserAgency[count(Name)>0] and $FirstCall='Y'"><xsl:call-template name="AQ01Print"><xsl:with-param name="AgencyUsageBlock" select="$AgencyUsageBlock"/><xsl:with-param name="IdPrefix" select="'Aub_'"/><xsl:with-param name="BaseTitlePhrase" select="'Agency Usage Block'"/></xsl:call-template><xsl:call-template name="SubreportHeaderPrint"><xsl:with-param name="Title" select="/Screen/ScreenData/Request/Form/Title"/><xsl:with-param name="LeftHeaderBlockList"/><xsl:with-param name="RightHeaderBlockList"/><xsl:with-param name="DoPageBreak" select="$FirstCall"/></xsl:call-template><xsl:call-template name="AttachPartHeader"><xsl:with-param name="FirstCall" select="'N'"/><xsl:with-param name="PartId" select="$PartId"/><xsl:with-param name="UserAgency" select="$UserAgency"/></xsl:call-template></xsl:if></xsl:template><xsl:template name="SubreportHeaderPrint"><xsl:param name="Title"/><xsl:param name="DelimiterString" select="'&#9;'"/><xsl:param name="LeftHeaderBlockList"/><xsl:param name="RightHeaderBlockList"/><xsl:param name="DoPageBreak" select="'Y'"/><xsl:variable name="FilteredLeftHeaderBlockList"><xsl:call-template name="RemoveEmptyListItems"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="InputList" select="$LeftHeaderBlockList"/></xsl:call-template></xsl:variable><xsl:variable name="FilteredRightHeaderBlockList"><xsl:call-template name="RemoveEmptyListItems"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="InputList" select="$RightHeaderBlockList"/></xsl:call-template></xsl:variable><table cellpadding="0" cellspacing="0" class=""><xsl:attribute name="class"><xsl:choose><xsl:when test="$DoPageBreak='Y'"><xsl:value-of select="'MaxWidth Section TopSection TitleBackground PageBreakBefore'"/></xsl:when><xsl:otherwise><xsl:value-of select="'MaxWidth Section TopSection TitleBackground'"/></xsl:otherwise></xsl:choose></xsl:attribute><tbody><tr><td class="MaxWidth"><table cellpadding="0" cellspacing="0" class="MaxWidth"><tbody><tr><td class="HeaderContainer RptSmall Nowrap VertTop"><xsl:if test="normalize-space(concat($FilteredLeftHeaderBlockList,$FilteredRightHeaderBlockList))"><xsl:attribute name="style"><xsl:value-of select="'width:29%;'"/></xsl:attribute></xsl:if><xsl:if test="normalize-space($FilteredLeftHeaderBlockList)"><xsl:call-template name="OutputSimpleList"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="SimpleList" select="$FilteredLeftHeaderBlockList"/></xsl:call-template></xsl:if></td><td class="HeaderContainer RptHeader UpperCase TextCenter" style="font-weight:bold;"><xsl:value-of select="$Title"/></td><td class="HeaderContainer RptSmall VertTop"><xsl:if test="normalize-space(concat($FilteredLeftHeaderBlockList,$FilteredRightHeaderBlockList))"><xsl:attribute name="style"><xsl:value-of select="'width:29%;'"/></xsl:attribute></xsl:if><xsl:if test="normalize-space($FilteredRightHeaderBlockList)"><div class="FloatRightBot Nowrap TextLeft"><xsl:call-template name="OutputSimpleList"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="SimpleList" select="$FilteredRightHeaderBlockList"/></xsl:call-template></div></xsl:if></td></tr></tbody></table></td></tr></tbody></table></xsl:template><xsl:template name="RemoveEmptyListItems"><xsl:param name="DelimiterString" select="'&#9;'"/><xsl:param name="InputList"/><xsl:variable name="NormedInputList"><xsl:call-template name="PrepTokenList"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="TokenList" select="$InputList"/></xsl:call-template></xsl:variable><xsl:variable name="FirstListItem" select="substring-before($NormedInputList,$DelimiterString)"/><xsl:choose><xsl:when test="string-length($NormedInputList) > string-length($DelimiterString)"><xsl:if test="string-length($FirstListItem)"><xsl:value-of select="concat($FirstListItem,$DelimiterString)"/></xsl:if><br/><xsl:variable name="RestOfInputList" select="substring-after($NormedInputList,$DelimiterString)"/><xsl:if test="$RestOfInputList"><xsl:call-template name="RemoveEmptyListItems"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="InputList" select="$RestOfInputList"/></xsl:call-template></xsl:if></xsl:when><xsl:otherwise/></xsl:choose></xsl:template><xsl:template name="OutputSimpleList"><xsl:param name="DelimiterString" select="'&#9;'"/><xsl:param name="SimpleList"/><xsl:variable name="NormedSimpleList"><xsl:call-template name="PrepTokenList"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="TokenList" select="$SimpleList"/></xsl:call-template></xsl:variable><xsl:variable name="FirstListItem" select="substring-before($NormedSimpleList,$DelimiterString)"/><xsl:choose><xsl:when test="string-length($NormedSimpleList) > string-length($DelimiterString)"><xsl:if test="string-length(normalize-space($FirstListItem))"><xsl:value-of select="$FirstListItem"/></xsl:if><xsl:variable name="RestOfSimpleList" select="substring-after($NormedSimpleList,$DelimiterString)"/><xsl:if test="string-length($RestOfSimpleList) > string-length($DelimiterString)"><br/><xsl:call-template name="OutputSimpleList"><xsl:with-param name="DelimiterString" select="$DelimiterString"/><xsl:with-param name="SimpleList" select="$RestOfSimpleList"/></xsl:call-template></xsl:if></xsl:when><xsl:otherwise/></xsl:choose></xsl:template><xsl:template name="AttachPartHeader"><xsl:param name="FirstCall"/><xsl:param name="PartId"/><xsl:param name="UserAgency"/><xsl:variable name="Part1UserNotice"><xsl:value-of select="''"/></xsl:variable><table cellpadding="0" cellspacing="0" class="MaxWidth Section RptDetail"><tbody><tr><td><table cellpadding="0" cellspacing="0" class="MaxWidth"><tbody><tr class="Part"><td><div class="HeaderContainer PartId NoWrap"><xsl:value-of select="$PartId"/></div></td><td class="MaxWidth"><table cellpadding="0" cellspacing="0" class="MaxWidth"><tbody><xsl:choose><xsl:when test="count($UserAgency/Name)>0 and $FirstCall='Y'"><tr class="Part RptBold"><td class="MaxWidth Container"><div class="DataContent TextCenter"><xsl:value-of select="'Agency Use Only'"/></div></td></tr></xsl:when><xsl:otherwise><tr><td class="MaxWidth Container DataContent Part RptBold TextCenter"><xsl:value-of select="$Part1UserNotice"/></td></tr></xsl:otherwise></xsl:choose></tbody></table></td></tr></tbody></table></td></tr></tbody></table></xsl:template></xsl:stylesheet>